pipeline {
  agent { label 'linux' }
  environment {
   ANSIBLE_PRIVATE_KEY=credentials('mariadb-private-key') 
  }
  stages {
    stage('Clean & Setup pip/virtualenv') {
      steps {
        sh 'rm -rf inventory/mycluster/'
        sh 'python3 -m venv venv'
        sh 'source venv/bin/activate'
        sh 'sudo dnf install python39-pip -y'
      }
    }
    stage('Clone kubespray repo') {
      steps {
        git url: 'https://github.com/kubernetes-sigs/kubespray.git', branch: 'release-2.17'
      }
    }
    stage('Check folder/version') {
      steps {
        sh 'pwd'
        sh 'git branch'
      }  
    }
    stage('Install Ansible Requirement') {
      steps {
        sh 'source venv/bin/activate && python3 -m pip install -r requirements.txt'
        sh 'source venv/bin/activate && python3 -m pip install -r contrib/inventory_builder/requirements.txt'
      }
    }
    stage('Setup Ansible Inventory') {
      steps {
        sh 'cp -rfp inventory/sample inventory/mycluster'
        sh 'source venv/bin/activate && declare -a IPS=(192.168.2.187 192.168.2.158 192.168.2.195) && CONFIG_FILE=inventory/mycluster/inventory.ini python3 contrib/inventory_builder/inventory.py ${IPS[@]}'
      }
    }
    stage('Deploy Kubespray') {
      steps {
        sh 'source venv/bin/activate && ansible-playbook -i inventory/mycluster/inventory.ini --private-key=$ANSIBLE_PRIVATE_KEY --become --become-user=ubuntu cluster.yml'
      }
    }
  }
}
